Some weights of the model checkpoint at dbmdz/bert-base-german-cased were not used when initializing BertForSequenceClassification: ['cls.predictions.transform.LayerNorm.bias', 'cls.predictions.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias']
- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at dbmdz/bert-base-german-cased and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
number of total samples ----------> 21779
label2idx and idx2label:----------> {'<f/>': 0, '<e/>': 1, '<rps/>': 2} {0: '<f/>', 1: '<e/>', 2: '<rps/>'}
number of unique word 2602
Generation train and validaiton loader for training for number of samples 21779
length of training dataset 15245 and class count
length of validation dataset 3266 and class count
length of test dataset 3268 and class
/home/phantom/miniconda3/envs/pyt/lib/python3.11/site-packages/transformers/optimization.py:411: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
  0%|                                                                                                                                                                                     | 0/3815 [00:00<?, ?it/s]/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
{'loss': 0.4518, 'learning_rate': 4.000000000000001e-06, 'epoch': 0.13}                                                                                                                                            
  3%|████▍                                                                                                                                                                      | 100/3815 [00:10<06:05, 10.18it/s/home/phantom/Desktop/DD_german/language_model/bert.py:42: FutureWarning: load_metric is deprecated and will be removed in the next major version of datasets. Use 'evaluate.load' instead, from the new library 🤗 Evaluate: https://huggingface.co/docs/evaluate
  metric_acc = load_metric("accuracy")
Downloading builder script: 4.21kB [00:00, 26.2MB/s]                                                                                                                                                               
Downloading builder script: 6.50kB [00:00, 33.0MB/s]                                                                                                                                                               
{'eval_loss': 0.25247299671173096, 'eval_acc': {'accuracy': 0.9409063074096754}, 'eval_f1': {'f1': 0.3231845191144765}, 'eval_runtime': 4.7175, 'eval_samples_per_second': 692.313, 'eval_steps_per_second': 86.698, 'epoch': 0.13}                                                                                                                                                                                                   
  3%|████▍                                                                                                                                                                      | 100/3815 [00:15<06:05, 10.18it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.2062, 'learning_rate': 8.000000000000001e-06, 'epoch': 0.26}                                                                                                                                            
{'eval_loss': 0.1956661194562912, 'eval_acc': {'accuracy': 0.9580526638089406}, 'eval_f1': {'f1': 0.606766797624333}, 'eval_runtime': 4.12, 'eval_samples_per_second': 792.715, 'eval_steps_per_second': 99.271, 'epoch': 0.26}                                                                                                                                                                                                       
  5%|████████▉                                                                                                                                                                  | 200/3815 [00:29<05:55, 10.16it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1869, 'learning_rate': 1.2e-05, 'epoch': 0.39}                                                                                                                                                          
{'eval_loss': 0.19074630737304688, 'eval_acc': {'accuracy': 0.958665033680343}, 'eval_f1': {'f1': 0.6145780942424157}, 'eval_runtime': 4.1875, 'eval_samples_per_second': 779.937, 'eval_steps_per_second': 97.671, 'epoch': 0.39}                                                                                                                                                                                                    
  8%|█████████████▍                                                                                                                                                             | 300/3815 [00:43<05:45, 10.17it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.18, 'learning_rate': 1.6000000000000003e-05, 'epoch': 0.52}                                                                                                                                             
{'eval_loss': 0.18908528983592987, 'eval_acc': {'accuracy': 0.9595835884874464}, 'eval_f1': {'f1': 0.6240890874915771}, 'eval_runtime': 4.4016, 'eval_samples_per_second': 741.995, 'eval_steps_per_second': 92.92, 'epoch': 0.52}                                                                                                                                                                                                    
 10%|█████████████████▉                                                                                                                                                         | 400/3815 [00:57<05:36, 10.16it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1862, 'learning_rate': 2e-05, 'epoch': 0.66}                                                                                                                                                            
{'eval_loss': 0.19450895488262177, 'eval_acc': {'accuracy': 0.958665033680343}, 'eval_f1': {'f1': 0.6145780942424157}, 'eval_runtime': 4.5294, 'eval_samples_per_second': 721.062, 'eval_steps_per_second': 90.298, 'epoch': 0.66}                                                                                                                                                                                                    
 13%|██████████████████████▍                                                                                                                                                    | 500/3815 [01:11<05:26, 10.16it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.2134, 'learning_rate': 1.9396681749622927e-05, 'epoch': 0.79}                                                                                                                                           
{'eval_loss': 0.18402251601219177, 'eval_acc': {'accuracy': 0.9598897734231476}, 'eval_f1': {'f1': 0.6242468424175638}, 'eval_runtime': 4.276, 'eval_samples_per_second': 763.799, 'eval_steps_per_second': 95.65, 'epoch': 0.79}                                                                                                                                                                                                     
 16%|██████████████████████████▉                                                                                                                                                | 600/3815 [01:27<05:16, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1593, 'learning_rate': 1.8793363499245855e-05, 'epoch': 0.92}                                                                                                                                           
{'eval_loss': 0.1790141761302948, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6294435895202423}, 'eval_runtime': 4.0958, 'eval_samples_per_second': 797.393, 'eval_steps_per_second': 99.857, 'epoch': 0.92}                                                                                                                                                                                                    
 18%|███████████████████████████████▍                                                                                                                                           | 700/3815 [01:41<05:06, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1707, 'learning_rate': 1.819004524886878e-05, 'epoch': 1.05}                                                                                                                                            
{'eval_loss': 0.1966601014137268, 'eval_acc': {'accuracy': 0.958665033680343}, 'eval_f1': {'f1': 0.6145780942424157}, 'eval_runtime': 4.07, 'eval_samples_per_second': 802.452, 'eval_steps_per_second': 100.491, 'epoch': 1.05}                                                                                                                                                                                                      
 21%|███████████████████████████████████▊                                                                                                                                       | 800/3815 [01:54<04:57, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.188, 'learning_rate': 1.7586726998491705e-05, 'epoch': 1.18}                                                                                                                                            
{'eval_loss': 0.1854432374238968, 'eval_acc': {'accuracy': 0.9595835884874464}, 'eval_f1': {'f1': 0.6240890874915771}, 'eval_runtime': 4.3623, 'eval_samples_per_second': 748.685, 'eval_steps_per_second': 93.758, 'epoch': 1.18}                                                                                                                                                                                                    
 24%|████████████████████████████████████████▎                                                                                                                                  | 900/3815 [02:09<04:47, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1592, 'learning_rate': 1.6983408748114633e-05, 'epoch': 1.31}                                                                                                                                           
{'eval_loss': 0.17518995702266693, 'eval_acc': {'accuracy': 0.958665033680343}, 'eval_f1': {'f1': 0.6164045881020564}, 'eval_runtime': 4.0842, 'eval_samples_per_second': 799.667, 'eval_steps_per_second': 100.142, 'epoch': 1.31}                                                                                                                                                                                                   
 26%|████████████████████████████████████████████▌                                                                                                                             | 1000/3815 [02:23<04:37, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1702, 'learning_rate': 1.6380090497737558e-05, 'epoch': 1.44}                                                                                                                                           
{'eval_loss': 0.1919713169336319, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6282217124591088}, 'eval_runtime': 4.1533, 'eval_samples_per_second': 786.364, 'eval_steps_per_second': 98.476, 'epoch': 1.44}                                                                                                                                                                                                    
 29%|█████████████████████████████████████████████████                                                                                                                         | 1100/3815 [02:38<04:27, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.177, 'learning_rate': 1.5776772247360483e-05, 'epoch': 1.57}                                                                                                                                            
{'eval_loss': 0.18054597079753876, 'eval_acc': {'accuracy': 0.9595835884874464}, 'eval_f1': {'f1': 0.6207855808622337}, 'eval_runtime': 4.0913, 'eval_samples_per_second': 798.279, 'eval_steps_per_second': 99.968, 'epoch': 1.57}                                                                                                                                                                                                   
 31%|█████████████████████████████████████████████████████▍                                                                                                                    | 1200/3815 [02:52<04:17, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1696, 'learning_rate': 1.517345399698341e-05, 'epoch': 1.7}                                                                                                                                             
{'eval_loss': 0.17429588735103607, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6282217124591088}, 'eval_runtime': 4.1857, 'eval_samples_per_second': 780.279, 'eval_steps_per_second': 97.714, 'epoch': 1.7}                                                                                                                                                                                                    
 34%|█████████████████████████████████████████████████████████▉                                                                                                                | 1300/3815 [03:06<04:08, 10.12it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.187, 'learning_rate': 1.4570135746606336e-05, 'epoch': 1.83}                                                                                                                                            
{'eval_loss': 0.17297157645225525, 'eval_acc': {'accuracy': 0.9598897734231476}, 'eval_f1': {'f1': 0.6261419052035287}, 'eval_runtime': 4.6773, 'eval_samples_per_second': 698.261, 'eval_steps_per_second': 87.443, 'epoch': 1.83}                                                                                                                                                                                                   
 37%|██████████████████████████████████████████████████████████████▍                                                                                                           | 1400/3815 [03:20<03:58, 10.13it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1606, 'learning_rate': 1.3966817496229261e-05, 'epoch': 1.97}                                                                                                                                           
{'eval_loss': 0.1756039410829544, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6282217124591088}, 'eval_runtime': 4.1307, 'eval_samples_per_second': 790.669, 'eval_steps_per_second': 99.015, 'epoch': 1.97}                                                                                                                                                                                                    
 39%|██████████████████████████████████████████████████████████████████▊                                                                                                       | 1500/3815 [03:34<03:48, 10.12it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.182, 'learning_rate': 1.3363499245852188e-05, 'epoch': 2.1}                                                                                                                                             
{'eval_loss': 0.1774529665708542, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6282217124591088}, 'eval_runtime': 4.1251, 'eval_samples_per_second': 791.746, 'eval_steps_per_second': 99.15, 'epoch': 2.1}                                                                                                                                                                                                      
 42%|███████████████████████████████████████████████████████████████████████▎                                                                                                  | 1600/3815 [03:49<03:38, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.186, 'learning_rate': 1.2760180995475113e-05, 'epoch': 2.23}                                                                                                                                            
{'eval_loss': 0.20738060772418976, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6282217124591088}, 'eval_runtime': 4.1625, 'eval_samples_per_second': 784.628, 'eval_steps_per_second': 98.259, 'epoch': 2.23}                                                                                                                                                                                                   
 45%|███████████████████████████████████████████████████████████████████████████▊                                                                                              | 1700/3815 [04:03<03:28, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1666, 'learning_rate': 1.215686274509804e-05, 'epoch': 2.36}                                                                                                                                            
{'eval_loss': 0.17870992422103882, 'eval_acc': {'accuracy': 0.9589712186160441}, 'eval_f1': {'f1': 0.6200622885438373}, 'eval_runtime': 4.1962, 'eval_samples_per_second': 778.327, 'eval_steps_per_second': 97.47, 'epoch': 2.36}                                                                                                                                                                                                    
 47%|████████████████████████████████████████████████████████████████████████████████▏                                                                                         | 1800/3815 [04:18<03:18, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1438, 'learning_rate': 1.1553544494720966e-05, 'epoch': 2.49}                                                                                                                                           
{'eval_loss': 0.17160871624946594, 'eval_acc': {'accuracy': 0.9595835884874464}, 'eval_f1': {'f1': 0.622094911408735}, 'eval_runtime': 4.0914, 'eval_samples_per_second': 798.261, 'eval_steps_per_second': 99.966, 'epoch': 2.49}                                                                                                                                                                                                    
 50%|████████████████████████████████████████████████████████████████████████████████████▋                                                                                     | 1900/3815 [04:31<03:08, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1958, 'learning_rate': 1.0950226244343893e-05, 'epoch': 2.62}                                                                                                                                           
{'eval_loss': 0.1764640510082245, 'eval_acc': {'accuracy': 0.9595835884874464}, 'eval_f1': {'f1': 0.622094911408735}, 'eval_runtime': 4.1118, 'eval_samples_per_second': 794.29, 'eval_steps_per_second': 99.469, 'epoch': 2.62}                                                                                                                                                                                                      
 52%|█████████████████████████████████████████████████████████████████████████████████████████                                                                                 | 2000/3815 [04:45<02:58, 10.17it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1593, 'learning_rate': 1.0346907993966819e-05, 'epoch': 2.75}                                                                                                                                           
{'eval_loss': 0.17803382873535156, 'eval_acc': {'accuracy': 0.9598897734231476}, 'eval_f1': {'f1': 0.6227639103257817}, 'eval_runtime': 4.1857, 'eval_samples_per_second': 780.275, 'eval_steps_per_second': 97.714, 'epoch': 2.75}                                                                                                                                                                                                   
 55%|█████████████████████████████████████████████████████████████████████████████████████████████▌                                                                            | 2100/3815 [05:01<02:49, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1398, 'learning_rate': 9.743589743589744e-06, 'epoch': 2.88}                                                                                                                                            
{'eval_loss': 0.19288817048072815, 'eval_acc': {'accuracy': 0.9598897734231476}, 'eval_f1': {'f1': 0.6227639103257817}, 'eval_runtime': 4.6453, 'eval_samples_per_second': 703.083, 'eval_steps_per_second': 88.047, 'epoch': 2.88}                                                                                                                                                                                                   
 58%|██████████████████████████████████████████████████████████████████████████████████████████████████                                                                        | 2200/3815 [05:15<02:39, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.163, 'learning_rate': 9.14027149321267e-06, 'epoch': 3.01}                                                                                                                                              
{'eval_loss': 0.1797296553850174, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.0967, 'eval_samples_per_second': 797.231, 'eval_steps_per_second': 99.837, 'epoch': 3.01}                                                                                                                                                                                                    
 60%|██████████████████████████████████████████████████████████████████████████████████████████████████████▍                                                                   | 2300/3815 [05:29<02:28, 10.21it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1591, 'learning_rate': 8.536953242835596e-06, 'epoch': 3.15}                                                                                                                                            
{'eval_loss': 0.18132679164409637, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.1413, 'eval_samples_per_second': 788.633, 'eval_steps_per_second': 98.76, 'epoch': 3.15}                                                                                                                                                                                                    
 63%|██████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                               | 2400/3815 [05:43<02:19, 10.16it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1703, 'learning_rate': 7.933634992458522e-06, 'epoch': 3.28}                                                                                                                                            
{'eval_loss': 0.19009722769260406, 'eval_acc': {'accuracy': 0.9595835884874464}, 'eval_f1': {'f1': 0.6240890874915771}, 'eval_runtime': 4.1717, 'eval_samples_per_second': 782.888, 'eval_steps_per_second': 98.041, 'epoch': 3.28}                                                                                                                                                                                                   
 66%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                                          | 2500/3815 [05:57<02:09, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1566, 'learning_rate': 7.330316742081448e-06, 'epoch': 3.41}                                                                                                                                            
{'eval_loss': 0.18650425970554352, 'eval_acc': {'accuracy': 0.9598897734231476}, 'eval_f1': {'f1': 0.6222755453137635}, 'eval_runtime': 4.0986, 'eval_samples_per_second': 796.866, 'eval_steps_per_second': 99.791, 'epoch': 3.41}                                                                                                                                                                                                   
 68%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                      | 2600/3815 [06:12<01:59, 10.16it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1658, 'learning_rate': 6.7269984917043755e-06, 'epoch': 3.54}                                                                                                                                           
{'eval_loss': 0.19119735062122345, 'eval_acc': {'accuracy': 0.9595835884874464}, 'eval_f1': {'f1': 0.6202751450785328}, 'eval_runtime': 4.1454, 'eval_samples_per_second': 787.861, 'eval_steps_per_second': 98.663, 'epoch': 3.54}                                                                                                                                                                                                   
 71%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                 | 2700/3815 [06:26<01:50, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1475, 'learning_rate': 6.123680241327301e-06, 'epoch': 3.67}                                                                                                                                            
{'eval_loss': 0.1898569017648697, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6282217124591088}, 'eval_runtime': 4.1523, 'eval_samples_per_second': 786.551, 'eval_steps_per_second': 98.499, 'epoch': 3.67}                                                                                                                                                                                                    
 73%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                             | 2800/3815 [06:40<01:39, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1489, 'learning_rate': 5.520361990950227e-06, 'epoch': 3.8}                                                                                                                                             
{'eval_loss': 0.19586558640003204, 'eval_acc': {'accuracy': 0.9595835884874464}, 'eval_f1': {'f1': 0.6254498784850222}, 'eval_runtime': 4.0817, 'eval_samples_per_second': 800.148, 'eval_steps_per_second': 100.202, 'epoch': 3.8}                                                                                                                                                                                                   
 76%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                        | 2900/3815 [06:54<01:30, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.153, 'learning_rate': 4.917043740573153e-06, 'epoch': 3.93}                                                                                                                                             
{'eval_loss': 0.18433016538619995, 'eval_acc': {'accuracy': 0.9595835884874464}, 'eval_f1': {'f1': 0.6245546817234656}, 'eval_runtime': 4.087, 'eval_samples_per_second': 799.115, 'eval_steps_per_second': 100.073, 'epoch': 3.93}                                                                                                                                                                                                   
 79%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                    | 3000/3815 [07:08<01:20, 10.13it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1358, 'learning_rate': 4.313725490196079e-06, 'epoch': 4.06}                                                                                                                                            
{'eval_loss': 0.1907614767551422, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.2169, 'eval_samples_per_second': 774.509, 'eval_steps_per_second': 96.991, 'epoch': 4.06}                                                                                                                                                                                                    
 81%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                               | 3100/3815 [07:23<01:10, 10.17it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1534, 'learning_rate': 3.710407239819005e-06, 'epoch': 4.19}                                                                                                                                            
{'eval_loss': 0.19135531783103943, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.148, 'eval_samples_per_second': 787.359, 'eval_steps_per_second': 98.601, 'epoch': 4.19}                                                                                                                                                                                                    
 84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                           | 3200/3815 [07:37<01:00, 10.13it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1456, 'learning_rate': 3.107088989441931e-06, 'epoch': 4.33}                                                                                                                                            
{'eval_loss': 0.19630087912082672, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.0986, 'eval_samples_per_second': 796.848, 'eval_steps_per_second': 99.789, 'epoch': 4.33}                                                                                                                                                                                                   
 87%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                       | 3300/3815 [07:51<00:50, 10.14it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1465, 'learning_rate': 2.503770739064857e-06, 'epoch': 4.46}                                                                                                                                            
{'eval_loss': 0.19618208706378937, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.0748, 'eval_samples_per_second': 801.507, 'eval_steps_per_second': 100.372, 'epoch': 4.46}                                                                                                                                                                                                  
 89%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                  | 3400/3815 [08:05<00:41, 10.12it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1499, 'learning_rate': 1.9004524886877828e-06, 'epoch': 4.59}                                                                                                                                           
{'eval_loss': 0.19859658181667328, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.0468, 'eval_samples_per_second': 807.057, 'eval_steps_per_second': 101.067, 'epoch': 4.59}                                                                                                                                                                                                  
 92%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉              | 3500/3815 [08:19<00:31, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1631, 'learning_rate': 1.2971342383107092e-06, 'epoch': 4.72}                                                                                                                                           
{'eval_loss': 0.1946457177400589, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.1192, 'eval_samples_per_second': 792.881, 'eval_steps_per_second': 99.292, 'epoch': 4.72}                                                                                                                                                                                                    
 94%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍         | 3600/3815 [08:34<00:21, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.1518, 'learning_rate': 6.938159879336351e-07, 'epoch': 4.85}                                                                                                                                            
{'eval_loss': 0.19528865814208984, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.1072, 'eval_samples_per_second': 795.189, 'eval_steps_per_second': 99.581, 'epoch': 4.85}                                                                                                                                                                                                   
 97%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉     | 3700/3815 [08:48<00:11, 10.15it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'loss': 0.152, 'learning_rate': 9.04977375565611e-08, 'epoch': 4.98}                                                                                                                                              
{'eval_loss': 0.19636119902133942, 'eval_acc': {'accuracy': 0.9601959583588487}, 'eval_f1': {'f1': 0.6286399262332871}, 'eval_runtime': 4.1498, 'eval_samples_per_second': 787.032, 'eval_steps_per_second': 98.56, 'epoch': 4.98}                                                                                                                                                                                                    
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎| 3800/3815 [09:02<00:01, 10.16it/s/home/phantom/Desktop/DD_german/language_model/bert.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  item = {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}
{'train_runtime': 543.9803, 'train_samples_per_second': 140.125, 'train_steps_per_second': 7.013, 'train_loss': 0.17404895609984392, 'epoch': 5.0}                                                                 
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 3815/3815 [09:03<00:00,  7.01it/s]
{'train_runtime': 543.9803, 'train_samples_per_second': 140.125, 'train_steps_per_second': 7.013, 'train_loss': 0.17404895609984392, 'epoch': 5.0, 'train_samples': 15245}
***** train metrics *****
  epoch                    =        5.0
  train_loss               =      0.174
  train_runtime            = 0:09:03.98
  train_samples            =      15245
  train_samples_per_second =    140.125
  train_steps_per_second   =      7.013

